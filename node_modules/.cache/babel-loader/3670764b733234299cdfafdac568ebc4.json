{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\reddi\\\\Desktop\\\\TimeReset-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\reddi\\\\Desktop\\\\TimeReset-react-main\\\\src\\\\index.js\";\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./styles.css\";\n\nvar renderTime = function renderTime(_ref) {\n  var remainingTime = _ref.remainingTime;\n\n  if (remainingTime === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 12\n      }\n    }, \"Too late...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Remaining\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, remainingTime), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"seconds\"));\n};\n\nvar options = [10, 20, 30, 40, 50];\n\nvar SetlectReset = function SetlectReset(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"selectTime\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, options.map(function (opt) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: opt,\n      key: opt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, opt + \" sec\");\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onClickReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n};\n\nfunction App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var onClickReset = function onClickReset() {\n    setKey(function (prevKey) {\n      return prevKey + 1;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.reactlabs.ai/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"React Labs\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), \"ReactJS Assignment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n    key: key,\n    isPlaying: true,\n    duration: 10,\n    onComplete: function onComplete() {\n      return [true, 1000];\n    },\n    colors: [[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, renderTime), /*#__PURE__*/React.createElement(SetlectReset, {\n    onClickReset: onClickReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Can you get this reset button to work?\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"The reset button should reset as per the time selected in the dropdown\")));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/reddi/Desktop/TimeReset-react-main/src/index.js"],"names":["React","useState","ReactDOM","CountdownCircleTimer","renderTime","remainingTime","options","SetlectReset","props","display","map","opt","onClickReset","App","key","setKey","prevKey","rootElement","document","getElementById","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,OAAO,cAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACxC,MAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB,wBAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,aAAxB,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD,CAZD;;AAcA,IAAMC,OAAO,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACI,GAAR,CAAY,UAACC,GAAD;AAAA,wBACX;AAAQ,MAAA,KAAK,EAAEA,GAAf;AAAoB,MAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,GAAG,GAAG,MADT,CADW;AAAA,GAAZ,CADH,CADF,eAQE;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF;AAYD,CAbD;;AAeA,SAASC,GAAT,GAAe;AACb,kBAAsBZ,QAAQ,CAAC,CAAD,CAA9B;AAAA;AAAA,MAAOa,GAAP;AAAA,MAAYC,MAAZ;;AACA,MAAMH,YAAY,GAAG,SAAfA,YAAe,GAAM;AAACG,IAAAA,MAAM,CAAC,UAAAC,OAAO;AAAA,aAAIA,OAAO,GAAG,CAAd;AAAA,KAAR,CAAN;AAA+B,GAA3D;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,2BADP;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,uBADF,eAYE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,UAAU,EAAE;AAAA,aAAM,CAAC,IAAD,EAAO,IAAP,CAAN;AAAA,KAJd;AAKE,IAAA,MAAM,EAAE,CAAC,CAAC,SAAD,EAAY,IAAZ,CAAD,EAAoB,CAAC,SAAD,EAAY,IAAZ,CAApB,EAAuC,CAAC,SAAD,CAAvC,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGV,UAPH,CADF,eAUE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEQ,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAZF,CAZF,CADF;AA+BD;;AAED,IAAMK,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAjB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport \"./styles.css\";\n\nconst renderTime = ({ remainingTime }) => {\n  if (remainingTime === 0) {\n    return <div className=\"timer\">Too late...</div>;\n  }\n\n  return (\n    <div className=\"timer\">\n      <div className=\"text\">Remaining</div>\n      <div className=\"value\">{remainingTime}</div>\n      <div className=\"text\">seconds</div>\n    </div>\n  );\n};\n\nconst options = [10, 20, 30, 40, 50];\n\nconst SetlectReset = (props) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <select id=\"selectTime\">\n        {options.map((opt) => (\n          <option value={opt} key={opt}>\n            {opt + \" sec\"}\n          </option>\n        ))}\n      </select>\n      <button onClick={props.onClickReset}>Reset</button>\n    </div>\n  );\n};\n\nfunction App() {\n  const [key, setKey] = useState(0);\n  const onClickReset = () => {setKey(prevKey => prevKey + 1)};\n  \n  return (\n    <div className=\"App\">\n      <h1>\n        <a\n          href=\"https://www.reactlabs.ai/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          React Labs\n        </a>\n        <br />\n        ReactJS Assignment\n      </h1>\n      <div className=\"timer-wrapper\">\n        <CountdownCircleTimer\n          key={key}\n          isPlaying\n          duration={10}\n          onComplete={() => [true, 1000]}\n          colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n        >\n          {renderTime}\n        </CountdownCircleTimer>\n        <SetlectReset onClickReset={onClickReset}/>\n        <h3>Can you get this reset button to work?</h3>\n        <h4>\n          The reset button should reset as per the time selected in the dropdown\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}